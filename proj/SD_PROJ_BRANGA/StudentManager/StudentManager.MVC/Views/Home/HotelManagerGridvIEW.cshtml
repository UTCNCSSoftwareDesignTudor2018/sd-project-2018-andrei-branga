@using System.Web.UI.WebControls

﻿@functions{ 
object GetEditingProduct(ASPxGridView grid) {
if(grid.IsNewRowEditing)
return new HotelViewModel();
return grid.GetRow(grid.EditingRowVisibleIndex);
}
}
@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "HotelsManagerGrid";
        settings.CallbackRouteValues = new { Controller = "Home", Action = "HotelsManagerGridviewPartial" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Home", Action = "HotelsManagerGridviewPartialAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Home", Action = "HotelsManagerGridviewPartialUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Home", Action = "HotelsManagerGridviewPartialDelete" };
        settings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButton = true;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowEditButton = true;


        settings.CommandColumn.CustomButtons.Add(new GridViewCommandColumnCustomButton { ID = "btnGetKey", Text = "Details" });
        settings.ClientSideEvents.CustomButtonClick =
            string.Format("function(s, e) {{ CustomButtonClick(s, e, '{0}'); }}", Url.Action("HotelDetails", "Home"));


        settings.KeyFieldName = "HotelId";
        settings.Width = Unit.Percentage(100);
        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCellsWindowLimit;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = true;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        settings.Columns.Add("HotelName");
        settings.Columns.Add("HotelAddress");
        settings.Columns.Add("PhoneNumber");
        settings.Columns.Add("HotelEmail");


        settings.EditFormLayoutProperties.ColCount = 2;
        settings.EditFormLayoutProperties.Items.Add("HotelName");
        settings.EditFormLayoutProperties.Items.Add("HotelAddress");
        settings.EditFormLayoutProperties.Items.Add("PhoneNumber");
        settings.EditFormLayoutProperties.Items.Add("HotelEmail");

        settings.EditFormLayoutProperties.Items.AddCommandItem(itemSettings => {
            itemSettings.Width = Unit.Percentage(100);
            itemSettings.HorizontalAlign = FormLayoutHorizontalAlign.Right;
        });
        settings.EditFormLayoutProperties.SettingsAdaptivity.AdaptivityMode = FormLayoutAdaptivityMode.SingleColumnWindowLimit;
        settings.EditFormLayoutProperties.SettingsAdaptivity.SwitchToSingleColumnAtWindowInnerWidth = 700;
    });
    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()
